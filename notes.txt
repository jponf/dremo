Implementation ideas:
	- Messages encode: XML

	- Passive Server (accept connections and answer petitions)

	- Clients manages their notifications events and timers
		- Events:
			- New task
			- Task finished
			- memory change (% threshold)
		- Times:
			- Max time between notifications: 3s (+/-)
			- Min time between event notifications: 0.2s (+/-)

	- Stateful server

	- Connection protocol TCP (Study multicast?)

	- Concurrent server (threads, processes?)

	- Message between: STX [ASCII 002], ETX [ASCII 003]

XML Format (v0.03):
	
	<client timestamp="dd-mm-yyyy hh:mm:ss">
		
		<name> ... </name>					[opt]

		<os> 								[]
			<name> ... </name>					[]
			<version> ... </version>			[]
		</os>								[]

		<cpu>								[]
			<arch> ... </arch>					[opt]
			<model> ... </model>				[opt]
			<used> ... </used>					[1..n]
			<load> ... </load>					[]
		</cpu>								[]
		
		<memory>							[]
			<ram>								[]
				<total> ... </total>				[]
				<used> ... </used>					[]
				<free> ... </free>					[]
				<avaliable> ... </avaliable>		[]
			</ram>								[]
			<swap>								[]
				<total> ... </total>				[]
				<used> ... </used>					[]
				<free> ... </free>					[]
			</swap>								[]
		</memory>							[]
		
		<processes>							[]
			<running name=""> pid </running>	[name opt, 1..n]
			<started name=""> pid </started>	[name opt, 0..n]
			<finished> pid </finished>			[0..n]
		</processes>						[]

	</client>
